{
  "name": "source.tag.tw",
  "scopeName": "source.tag.tw",
  "injectionSelector": "L:meta.tag.attributes -comment",
  "patterns": [
    {
      "name": "meta.tag.tw",
      "begin": "\\s*(tw)(=)(\")",
      "beginCaptures": {
        "1": { "name": "entity.other.attribute-name" },
        "2": { "name": "keyword.operator.assignment" },
        "3": { "name": "string.quoted.double" }
      },
      "end": "(\")",
      "endCaptures": {
        "1": { "name": "string.quoted.double" }
      },
      "patterns": [
        {
          "end": "\"",
          "patterns": [
            { "include": "#line-comment-end-double-quote" },
            { "include": "#block-comment-end-double-quote" },
            { "include": "source.tw" }
          ]
        }
      ]
    },
    {
      "name": "meta.tag.tw",
      "begin": "\\s*(tw)(=)(')",
      "beginCaptures": {
        "1": { "name": "entity.other.attribute-name" },
        "2": { "name": "keyword.operator.assignment" },
        "3": { "name": "string.quoted.single" }
      },
      "end": "(')",
      "endCaptures": {
        "1": { "name": "string.quoted.single" }
      },
      "patterns": [
        {
          "end": "'",
          "patterns": [
            { "include": "#line-comment-end-single-quote" },
            { "include": "#block-comment-end-single-quote" },
            { "include": "source.tw" }
          ]
        }
      ]
    },
    {
      "name": "meta.tag.tw",
      "begin": "\\s*(tw)(=){(\")",
      "beginCaptures": {
        "1": { "name": "entity.other.attribute-name" },
        "2": { "name": "keyword.operator.assignment" },
        "3": { "name": "string.quote.double" }
      },
      "end": "(\")}",
      "endCaptures": {
        "1": { "name": "string.quote.double" }
      },
      "patterns": [
        {
          "end": "\"}",
          "patterns": [
            { "include": "#line-comment-end-double-quote" },
            { "include": "#block-comment-end-double-quote" },
            { "include": "#string-character-escape" },
            { "include": "source.tw" }
          ]
        }
      ]
    },
    {
      "name": "meta.tag.tw",
      "begin": "\\s*(tw)(=){(')",
      "beginCaptures": {
        "1": { "name": "entity.other.attribute-name" },
        "2": { "name": "keyword.operator.assignment" },
        "3": { "name": "string.quote.single" }
      },
      "end": "(')}",
      "endCaptures": {
        "1": { "name": "string.quote.single" }
      },
      "patterns": [
        {
          "end": "'}",
          "patterns": [
            { "include": "#line-comment-end-single-quote" },
            { "include": "#block-comment-end-single-quote" },
            { "include": "#string-character-escape" },
            { "include": "source.tw" }
          ]
        }
      ]
    },
    {
      "name": "meta.tag.tw",
      "begin": "\\s*(tw)(=){`",
      "beginCaptures": {
        "1": { "name": "entity.other.attribute-name" },
        "2": { "name": "keyword.operator.assignment" }
      },
      "end": "`}",
      "patterns": [
        {
          "end": "\"}",
          "patterns": [
            { "include": "#line-comment-end-backtick" },
            { "include": "#block-comment-end-backtick" },
            { "include": "#string-character-escape" },
            { "include": "source.tw" }
          ]
        }
      ]
    }
  ],
  "repository": {
    "line-comment-end-double-quote": {
      "match": "(//)[^\"]*",
      "captures": {
        "0": { "name": "comment.line.double-slash.tw" },
        "1": { "name": "punctuation.definition.comment.tw" }
      }
    },
    "block-comment-end-double-quote": {
      "begin": "(/\\*)",
      "beginCaptures": {
        "1": { "name": "punctuation.definition.comment.begin.tw" }
      },
      "end": "(\\*/)|\"",
      "endCaptures": {
        "1": { "name": "punctuation.definition.comment.end.tw" }
      },
      "contentName": "comment.block.tw"
    },
    "line-comment-end-single-quote": {
      "match": "(//)[^']*",
      "captures": {
        "0": { "name": "comment.line.double-slash.tw" },
        "1": { "name": "punctuation.definition.comment.tw" }
      }
    },
    "block-comment-end-single-quote": {
      "begin": "(/\\*)",
      "beginCaptures": {
        "1": { "name": "punctuation.definition.comment.begin.tw" }
      },
      "end": "(\\*/)|'",
      "endCaptures": {
        "1": { "name": "punctuation.definition.comment.end.tw" }
      },
      "contentName": "comment.block.tw"
    },
    "line-comment-end-backtick": {
      "match": "(//)[^`]*",
      "captures": {
        "0": { "name": "comment.line.double-slash.tw" },
        "1": { "name": "punctuation.definition.comment.tw" }
      }
    },
    "block-comment-end-backtick": {
      "begin": "(/\\*)",
      "beginCaptures": {
        "1": { "name": "punctuation.definition.comment.begin.tw" }
      },
      "end": "(\\*/)|`",
      "endCaptures": {
        "1": { "name": "punctuation.definition.comment.end.tw" }
      },
      "contentName": "comment.block.tw"
    },
    "string-character-escape": {
      "name": "constant.character.escape.tw",
      "match": "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\{[0-9A-Fa-f]+\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
    }
  }
}
